Big Data
	- Batch-> SQL, Files, beams of pipelines! 

IoT devices, sensors, robots-> throwing huge chunks of data!
	-> FREQUENT
	-> diff types of data-> telemetry, remote, update firmware
	 		monitoring
	-> over a period of time-> S X t = VOLUME of data 

3 Vs of Big data:
	- Velocity
	- Variety
	- VOLUME

-> Pub/SUb -> publisher-subscriber architecture 
	-> Pub/Sub DOES NOT STORE 
		-> 7 days of saved storage not persistent!
		-> PERSISTENT STORAGE-> absent -> store in GCS instead!
		-> IT RETAINS the data for 7 days!!!

Routers-> 2 jobs: forwarding and DROPPING!
	-> ACL or ROUTING table! 
Pub/Sub is a router-> it will forward/ or drop
	-> Iot devices may not be available all the time
		(During night hours, when factory is off)
	-> data is temporary retained or saved so that other
	GCP services can query data at-will!

-> PUSH and PULL

Fan In-> load balancing less subsribers
Fan out-> load balancing for multiple subsribers 

All topics, subsribers, publishers their compute infra will be
	loosely coupled-> can be anywhere
	-> stored separately 

-> snapshot, restore
	-> use case 

-> Incident Detection, Fraud Detection (customer request)
lane: {direction: , lat:, long: ...}


Scenario-> batch or stream 
MCQ-> single, multiple, Arranging in the right sequence

Pipeline step1 -> step 2...

DE-> EL, ETL, ELT 

EL-> data source (onprem, GCS,..) -> Data Warehouse [Batch]
    data source-> Pub/Sub -> dataflow -> Data Warehouse [Stream] 
	-> when data is ready to be analyzed/visulized
ETL-> data source, (DataFlow or DataPrep) -> Data Warehouse 
	datasource, pubsub -> dataflow or prep-> warehouse [stream]
	=> don't want any more changes to analysis
	=> the data to be analyzed needs to be first transformed 
		(time stamps, currencies, UNITS (deg c, K, F) ) 
ELT-> where multiple transformation are required on same master data
	-> ENTIRE ORG data is same, but Marketing, sales, HR, tech
	all have diff requirements from SAME DATA

   Data source-> Data Lake => now do any transforms you like
		specific to use cases  
